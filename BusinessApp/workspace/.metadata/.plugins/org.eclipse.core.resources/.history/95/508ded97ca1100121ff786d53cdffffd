package com.fervil.spring.careercoach.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.AbstractController;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.fervil.spring.careercoach.model.domain.UserProfile;
import com.fervil.spring.careercoach.service.CreateUserProfileValidator;
import com.fervil.spring.careercoach.service.UserProfileManager;

import com.fervil.spring.careercoach.service.SelectedCoachesValidator;

@Controller
@RequestMapping("/userprofileList")
@SessionAttributes("userprofile")
public class UserProfileListController extends AbstractController {
	private UserProfileManager userProfileManager;
	private SelectedCoachesValidator validator;
	
	@Autowired
	public UserProfileListController(UserProfileManager userProfileManager,
			CreateUserProfileValidator validator) {
		this.userProfileManager = userProfileManager;
		this.validator = validator;
	}

	public void setUserProfileManager(UserProfileManager userProfileManager) {
		this.userProfileManager = userProfileManager;
	}
	
	public UserProfileManager getUserProfileManager() {
		return userProfileManager;
	}

	@RequestMapping(method = RequestMethod.GET)
	protected ModelAndView handleRequestInternal(HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		List<UserProfile> userProfiles = userProfileManager.getUserProfiles();
		ModelAndView mav = new ModelAndView ();
		mav.setViewName ("userprofileList");
		mav.addObject("userProfiles", userProfiles);
		return mav;
	}
	
	@RequestMapping(method = RequestMethod.POST)
	public String submitForm(
			@ModelAttribute("userProfile") UserProfile userProfile,
			BindingResult result, SessionStatus status) {
		validator.validate(userProfile, result);
		
        if (result.hasErrors()) {
			return "createuserprofile";
		} else {

			///////////////////////////////////////////////////////////////////
			// This code for testing only
			///////////////////////////////////////////////////////////////////
			
			userProfile.setUser_userId(1001);
			userProfile.setModifiedDate(new Date());
			userProfile.setAccountType(1);
			userProfile.setUserProfileType(1);
			
			///////////////////////////////////////////////////////////////////////
			//End of this code for testing only
			///////////////////////////////////////////////////////////////////////

			userProfileManager.storeUserProfile(userProfile);
			status.setComplete();
			return "redirect:createuserprofilesuccess/userProfileId/" + userProfile.getUserProfileId();
		}
	}	
	
}
