package com.fervil.spring.careercoach.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.AbstractController;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.fervil.spring.careercoach.model.domain.CoachingRequest;
import com.fervil.spring.careercoach.model.domain.UserProfile;
import com.fervil.spring.careercoach.service.CreateUserProfileValidator;
import com.fervil.spring.careercoach.service.UserProfileManager;

import com.fervil.spring.careercoach.service.SelectedCoachesValidator;

@Controller
@RequestMapping("/userprofileList")
public class UserProfileListController  {
	private UserProfileManager userProfileManager;
	private SelectedCoachesValidator validator;
	
	@Autowired
	public UserProfileListController(UserProfileManager userProfileManager,
			SelectedCoachesValidator validator) {
		this.userProfileManager = userProfileManager;
		this.validator = validator;
	}

	public void setUserProfileManager(UserProfileManager userProfileManager) {
		this.userProfileManager = userProfileManager;
	}
	
	public UserProfileManager getUserProfileManager() {
		return userProfileManager;
	}

	//@RequestMapping(method = RequestMethod.GET)
	//protected ModelAndView handleRequestInternal(HttpServletRequest request,
	//		HttpServletResponse response) throws Exception {
	@RequestMapping(method = RequestMethod.GET) 
	public ModelAndView listUserProfiles(ModelMap model) {

		List<UserProfile> userProfiles = userProfileManager.getUserProfiles();
		ModelAndView mav = new ModelAndView ();
		mav.setViewName ("userprofileList");
		mav.addObject("userProfiles", userProfiles);
		
		CoachingRequest coachingRequest = new CoachingRequest();
		mav.addObject("coachingRequest", coachingRequest);
		
		return mav;
	}
	
	@RequestMapping(method = RequestMethod.POST)
	public String submitForm(
			@ModelAttribute("coachingRequest") CoachingRequest coachingRequest,
			BindingResult result, SessionStatus status) {
		
		System.out.println(" 1 Post ::: An error was found in the results::::");
		
		validator.validate(coachingRequest, result);

        if (result.hasErrors()) {
        	System.out.println("2 Post ::: An error was found in the results::::");
			return "userprofilelist";
		} else {
			return "createcoachingrequest"; 
		}
	}	
	
}
