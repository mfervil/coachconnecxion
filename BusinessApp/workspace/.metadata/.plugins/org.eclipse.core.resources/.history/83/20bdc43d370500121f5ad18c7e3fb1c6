package com.fervil.spring.careercoach.service;
		
import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import com.fervil.spring.careercoach.model.domain.UserProfile;

@Component
public class CreateUserProfileValidator implements Validator {

    public boolean supports(Class clazz) {
        return UserProfile.class.isAssignableFrom(clazz);
    }

    public void validate(Object target, Errors errors) {
    	String fieldisRequired = " : This field is required.";
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "displayName",
                "required.displayName", fieldisRequired);
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "email",
                "required.email", fieldisRequired);
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "overview",
                "required.overview", fieldisRequired);
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "serviceDescription",
                "required.serviceDescription", fieldisRequired);
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "skillsExpertise",
                "required.skillsExpertise", fieldisRequired);
/*        
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "keyWords",
                "required.keyWords", "Keywords is required.");
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "companyOfHighestPosition",
                "required.companyOfHighestPosition", fieldisRequired);
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "summaryOfHighestPosition",
                "required.summaryOfHighestPosition", fieldisRequired);
*/          
       
        //ValidationUtils.rejectIfEmptyOrWhitespace(errors, "hourlyRate",
        //        "required.hourlyRate", fieldisRequired);

        UserProfile userProfile = (UserProfile) target;
        if (userProfile.getHourlyRate() <= 0) {
			errors.rejectValue("hourlyRate", "invalid.hourlyRateAmount", " : Amount must be > 0");
        }
        
        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "paymentTerms",
                "required.paymentTerms", fieldisRequired);
    }
}
